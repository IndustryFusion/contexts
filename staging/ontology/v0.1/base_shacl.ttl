@prefix iffBaseEntities: <https://industryfusion.github.io/contexts/ontology/v0.1/base_entities/> .
@prefix : <https://industryfusion.github.io/contexts/ontology/v0.1/base_shacl/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix ngsild: <https://uri.etsi.org/ngsi-ld/> .
@prefix iffBaseKnowledge: <https://industryfusion.github.io/contexts/ontology/v0.1/base_knowledge/> .
@prefix material: <https://industryfusion.github.io/contexts/ontology/v0.1/material/>



:MachineShape
    a sh:NodeShape ;
    sh:targetClass iffBaseEntities:Machine ;
    sh:property [
        sh:path iffBaseEntities:hasState ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasValue ;
            sh:nodeKind sh:IRI;
            sh:class iffBaseKnowledge:MachineState;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
.

:CutterShape
    a sh:NodeShape ;
    sh:targetClass iffBaseEntities:Cutter ;
    sh:property [
        sh:path iffBaseEntities:hasFilter ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasObject ;
            sh:nodeKind sh:IRI;
            sh:class iffBaseEntities:Filter;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path iffBaseEntities:hasInWorkpiece ;
        sh:order 20 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 0 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasObject ;
            sh:nodeKind sh:IRI;
            sh:class iffBaseEntities:Workpiece;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path iffBaseEntities:hasOutWorkpiece ;
        sh:order 30 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 0 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasObject ;
            sh:nodeKind sh:IRI;
            sh:class iffBaseEntities:Workpiece;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
.

:FilterShape
    a sh:NodeShape ;
    sh:targetClass iffBaseEntities:Filter ;
    sh:property [
        sh:path iffBaseEntities:hasCartridge ;
        sh:order 1 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasObject ;
            sh:nodeKind sh:IRI;
            sh:class iffBaseEntities:Cartridge;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path iffBaseEntities:hasStrength ;
        sh:order 10 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasValue ;
            sh:nodeKind sh:Literal;
            sh:maxInclusive 100.0 ;
            sh:minInclusive 0.0 ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
.

:CartridgeShape
    a sh:NodeShape ;
    sh:targetClass iffBaseEntities:FilterCartridge ;
    sh:property [
        sh:path iffBaseEntities:isUsedFrom ;
        sh:order 10 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasValue ;
            sh:nodeKind sh:Literal;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path iffBaseEntities:isUsedUntil ;
        sh:order 20 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasValue ;
            sh:nodeKind sh:Literal;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
.

:WorkpieceShape
    a sh:NodeShape ;
    sh:targetClass iffBaseEntities:Workpiece ;
    sh:property [
        sh:path iffBaseEntities:hasWidth ;
        sh:order 10 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasValue ;
            sh:nodeKind sh:Literal;
            sh:maxInclusive 100.0 ;
            sh:minInclusive 0.0 ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path iffBaseEntities:hasHeight ;
        sh:order 10 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasValue ;
            sh:nodeKind sh:Literal;
            sh:maxInclusive 5.0 ;
            sh:minInclusive 0.0 ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path iffBaseEntities:hasLength ;
        sh:order 10 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasValue ;
            sh:nodeKind sh:Literal;
            sh:maxInclusive 200.0 ;
            sh:minInclusive 0.0 ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
    sh:property [
        sh:path iffBaseEntities:hasMaterial ;
        sh:order 10 ;
        sh:nodeKind sh:BlankNode;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:property [
            sh:path ngsild:hasValue ;
            sh:nodeKind sh:Iri;
            sh:class mat:Material ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ] ;
    ] ;
.
