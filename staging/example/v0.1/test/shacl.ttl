#
# Copyright (c) 2024 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX entities: <https://industryfusion.github.io/contexts/example/v0/base_entities/>
PREFIX ngsi-ld: <https://uri.etsi.org/ngsi-ld/>
PREFIX :  <https://industryfusion.github.io/contexts/example/v0/tests/>
PREFIX sh: <http://www.w3.org/ns/shacl#>


# Every targetClass must be a defined Entity 
:TargetclassShape
    a sh:NodeShape;
    sh:targetClass sh:NodeShape;
    sh:sparql [
        a sh:SPARQLConstraints ;
        sh:message "Targetclass is not a definded entity" ;
        sh:select """
        PREFIX entities: <https://industryfusion.github.io/contexts/example/v0/base_entities/>
        SELECT $this WHERE {
            $this sh:targetClass $cl .
            FILTER NOT EXISTS {
                ?cl rdfs:subClassOf* entities:Entity .
            }
        }
        """;
    ] .

# Every Entity must have an assigned NodeShape
:TargetclassShape
    a sh:NodeShape;
    sh:targetClass entities:Entity;
    sh:sparql [
        a sh:SPARQLConstraints ;
        sh:message "Entity has no assigned NodeShape" ;
        sh:select """
        SELECT $this WHERE {
            $that sh:targetClass $this .
            FILTER NOT EXISTS {
                ?that a sh:NodeShape .
            }
        }
        """;
    ] .

# Every first level property path must type owl:ObjectProperty
:TargetclassShape
    a sh:NodeShape;
    sh:targetClass sh:NodeShape;
    sh:sparql [
        a sh:SPARQLConstraints ;
        sh:message "Property Path is no type owl:OpjectProperty" ;
        sh:select """
        SELECT $this WHERE {
            $this sh:property [ sh:path ?path; ] .
            FILTER NOT EXISTS {
                ?path a owl:ObjectProperty .
            }
        }
        """;
    ] .

